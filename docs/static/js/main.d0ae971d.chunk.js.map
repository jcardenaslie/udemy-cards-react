{"version":3,"sources":["Components/Card.jsx","Components/Cards.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","lang","img","fcolor","scolor","className","style","background","src","alt","Cards","url","map","createCard","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2LA0BeA,EArBF,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,IAAKC,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,OACjC,OACE,sBACEC,UAAU,OACVC,MAAO,CACLC,WAAW,4BAAD,OAA8BJ,EAA9B,aAAyCC,EAAzC,MAHd,UAME,qBAAKI,IAAKN,EAAKO,IAAI,aACnB,6BAAKR,QCqCIS,EAnCD,WA4BZ,OACE,mCA5BW,CACX,CACET,KAAM,SACNU,IAAK,2CACLR,OAAQ,UACRC,OAAQ,WAEV,CACEH,KAAM,OACNU,IAAK,yCACLR,OAAQ,UACRC,OAAQ,WAEV,CACEH,KAAM,QACNU,IAAK,0CACLR,OAAQ,UACRC,OAAQ,WAEV,CACEH,KAAM,OACNU,IAAK,yCACLR,OAAQ,UACRC,OAAQ,YAMDQ,KAAK,mBA1CC,SAAC,GAAmC,IAAjCX,EAAgC,EAAhCA,KAAMU,EAA0B,EAA1BA,IAAKR,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,OACvC,OACE,cAAC,EAAD,CAEEH,KAAMA,EACNC,IAAKS,EACLR,OAAQA,EACRC,OAAQA,GAJHH,GAuC4CY,CAAY,CAAEZ,KAAnD,EAAIA,KAAqDU,IAAzD,EAAUA,IAAoDR,OAA9D,EAAeA,OAAuDC,OAAtE,EAAuBA,eCxC1BU,MAJf,WACE,OAAS,cAAE,EAAF,KCSIC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.d0ae971d.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./Card.css\";\n\nconst Card = ({ lang, img, fcolor, scolor }) => {\n  return (\n    <div\n      className=\"card\"\n      style={{\n        background: `linear-gradient(to left, ${fcolor}, ${scolor})`,\n      }}\n    >\n      <img src={img} alt=\"lang.svg\" />\n      <h3>{lang}</h3>\n    </div>\n  );\n};\n\nCard.propTypes = {\n  lang: PropTypes.string,\n  img: PropTypes.string,\n  fcolor: PropTypes.string,\n  scolor: PropTypes.string,\n};\n\nexport default Card;\n","import React from \"react\";\nimport Card from \"./Card\";\n\n\nconst createCard = ({ lang, url, fcolor, scolor }) => {\n  return (\n    <Card\n      key={lang}\n      lang={lang}\n      img={url}\n      fcolor={fcolor}\n      scolor={scolor}\n    />\n  );\n}\n\nconst Cards = () => {\n  const data = [\n    {\n      lang: \"Python\",\n      url: \"https://cdn.svgporn.com/logos/python.svg\",\n      fcolor: \"#00c3ff\",\n      scolor: \"#ffff1c\",\n    },\n    {\n      lang: \"Java\",\n      url: \"https://cdn.svgporn.com/logos/java.svg\",\n      fcolor: \"#D31027\",\n      scolor: \"#EA384D\",\n    },\n    {\n      lang: \"React\",\n      url: \"https://cdn.svgporn.com/logos/react.svg\",\n      fcolor: \"#000428\",\n      scolor: \"#004e92\",\n    },\n    {\n      lang: \"Perl\",\n      url: \"https://cdn.svgporn.com/logos/perl.svg\",\n      fcolor: \"#cc2b5e\",\n      scolor: \"#753a88\",\n    },\n  ];\n\n  return (\n    <>\n      { data.map( ( { lang, url, fcolor, scolor } ) => createCard( { lang, url, fcolor, scolor } ))}\n    </>\n  );\n};\n\nexport default Cards;\n","import Cards from './Components/Cards'\n\nfunction App() {\n  return ( < Cards />);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}